public class Solution {

    public int solve(ArrayList<ArrayList<Integer>> A) {
        List<TimePair> pairs = new ArrayList<>();
        for (int i = 0; i < A.size(); i++) {
            pairs.add(new TimePair(A.get(i).get(0), true));
            pairs.add(new TimePair(A.get(i).get(1), false));
        }
        Collections.sort(pairs, new MyComparator());
        int currentMeetings = 0;
        int answer = 0;
        for (int i = 0; i < pairs.size(); i++) {
            if (pairs.get(i).start) {
                currentMeetings++;
            } else {
                currentMeetings--;
            }
            answer = Math.max(answer, currentMeetings);
        }
        return answer;
    }

    class TimePair {
        int time;
        boolean start;

        TimePair(int time, boolean start) {
            this.time = time;
            this.start = start;
        }
    }

    class MyComparator implements Comparator<TimePair> {
        @Override
        public int compare(TimePair a, TimePair b) {
            if (a.time == b.time) {
                if (a.start) {
                    return 1;
                } else {
                    return -1;
                }
            }
            return a.time - b.time;
        }
    }
}
