public class Solution {

    private static final int MOD = 1000000007;

    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int hammingDistance(final List<Integer> A) {
        long answer = 0;
        List<StringBuilder> binaryStrings = new ArrayList<>();
        for (int i = 0; i < A.size(); i++) {
            StringBuilder binaryString = new StringBuilder(Integer.toBinaryString(A.get(i)));
            while (binaryString.length() != 50) {
                binaryString.insert(0, '0');
            }
            binaryStrings.add(binaryString);
        }
        for (int i = 0; i < 50; i++) {
            long zeros = 0;
            long ones = 0;
            for (int j = 0; j < A.size(); j++) {
                if (binaryStrings.get(j).charAt(i) == '0') {
                    zeros++;
                } else {
                    ones++;
                }
            }
            answer = answer + ((zeros * ones) % MOD);
            answer = answer % MOD;
        }
        return (int) ((answer * 2) % MOD);
    }
}
