public class Solution {
    public String getPermutation(int A, int B) {
        int[] array = new int[A];
        for (int i = 1; i <= A; i++) {
            array[i - 1] = i;
        }
        for (int i = 1; i < B; i++) {
            nextPermutation(array);
        }
        StringBuilder answer = new StringBuilder();
        for (int i = 0; i < array.length; i++) {
            answer.append(String.valueOf(array[i]));
        }
        return answer.toString();
    }

    private void nextPermutation(int[] array) {
        int i = array.length - 1;
        while (i >= 1 && array[i - 1] > array[i]) {
            i--;
        }
        if (i == 0) {
            Arrays.sort(array);
            return;
        }
        i = i - 1;
        int j = i;
        int index = 0;
        int number = Integer.MAX_VALUE;
        while (j < array.length) {
            if (array[j] > array[i] && array[j] < number) {
                index = j;
                number = array[j];
            }
            j++;
        }
        int temp = array[i];
        array[i] = array[index];
        array[index] = temp;
        Arrays.sort(array, i + 1, array.length);
    }
}
