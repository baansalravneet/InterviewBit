/**
 * Definition for singly-linked list.
 * class ListNode {
 * public int val;
 * public ListNode next;
 * ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode A, int B) {
        final ListNode head = A;
        int length = 0;
        while (A != null) {
            length++;
            A = A.next;
        }
        if (B % length == 0) {
            return head;
        }
        A = head;
        int move = length - (B % length) - 1;
        while (move > 0) {
            A = A.next;
            move--;
        }
        final ListNode newHead = A.next;
        ListNode newEnd = A;
        A = A.next;
        newEnd.next = null;
        while (A.next != null) {
            A = A.next;
        }
        A.next = head;
        return newHead;
    }
}
