public class Solution {
    public int solve(ArrayList<ArrayList<Integer>> A) {
        int[][] dp = new int[A.size()][A.get(0).size()];
        dp[0][0] = 1;
        for (int i = 1; i < A.size(); i++) {
            if (A.get(i).get(0) > A.get(i - 1).get(0)) {
                dp[i][0] = dp[i - 1][0] + 1;
            } else {
                break;
            }
        }
        for (int j = 1; j < A.get(0).size(); j++) {
            if (A.get(0).get(j) > A.get(0).get(j - 1)) {
                dp[0][j] = dp[0][j - 1] + 1;
            } else {
                break;
            }
        }
        for (int i = 1; i < A.size(); i++) {
            for (int j = 1; j < A.get(0).size(); j++) {
                int value = 0;
                if (A.get(i).get(j) > A.get(i - 1).get(j) && dp[i - 1][j] != 0) {
                    value = Math.max(value, dp[i - 1][j]);
                }
                if (A.get(i).get(j) > A.get(i).get(j - 1) && dp[i][j - 1] != 0) {
                    value = Math.max(value, dp[i][j - 1]);
                }
                if (value != 0) {
                    dp[i][j] = value + 1;
                }
            }
        }
        return dp[A.size() - 1][A.get(0).size() - 1] == 0 ? -1 : dp[A.size() - 1][A.get(0).size() - 1];
    }
}
