/**
 * Definition for binary tree
 * class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) {
 * val = x;
 * left=null;
 * right=null;
 * }
 * }
 */
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode A) {
        ArrayList<Integer> answer = new ArrayList<>();
        Deque<TreeNode> deque = new ArrayDeque<>();
        deque.addFirst(A);
        while (!deque.isEmpty()) {
            A = deque.pollFirst();
            answer.add(A.val);
            if (A.left != null) {
                deque.addFirst(A.left);
            }
            if (A.right != null) {
                deque.addFirst(A.right);
            }
        }
        Collections.reverse(answer);
        return answer;
    }
}
