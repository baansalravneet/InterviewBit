/**
 * Definition for binary tree
 * class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) {
 * val = x;
 * left=null;
 * right=null;
 * }
 * }
 */
public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public TreeNode sortedArrayToBST(final int[] A) {
        return recursionHelper(A, 0, A.length);
    }

    private TreeNode recursionHelper(int[] A, int left, int right) {
        if (left >= right) {
            return null;
        }
        if (left == right - 1) {
            return new TreeNode(A[left]);
        }
        int mid = (right + left) / 2;
        TreeNode newNode = new TreeNode(A[mid]);
        newNode.left = recursionHelper(A, left, mid);
        newNode.right = recursionHelper(A, mid + 1, right);
        return newNode;
    }
}
