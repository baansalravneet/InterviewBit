/**
 * Definition for binary tree
 * class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) {
 * val = x;
 * left=null;
 * right=null;
 * }
 * }
 */
public class Solution {
    public TreeNode solve(TreeNode A) {
        while (isHalf(A)) {
            A = A.left == null ? A.right : A.left;
        }
        fixTree(A);
        return A;
    }

    private void fixTree(TreeNode A) {
        if (isLeaf(A)) {
            return;
        }
        while (isHalf(A.left)) {
            A.left = A.left.left == null ? A.left.right : A.left.left;
        }
        while (isHalf(A.right)) {
            A.right = A.right.left == null ? A.right.right : A.right.left;
        }
        fixTree(A.left);
        fixTree(A.right);
    }

    private boolean isLeaf(TreeNode A) {
        return A.left == null && A.right == null;
    }

    private boolean isHalf(TreeNode A) {
        return (A.left != null ^ A.right != null);
    }
}
