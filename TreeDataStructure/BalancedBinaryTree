/**
 * Definition for binary tree
 * class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) {
 * val = x;
 * left=null;
 * right=null;
 * }
 * }
 */
public class Solution {
    public int isBalanced(TreeNode A) {
        if (A == null) {
            return 1;
        }
        int difference = findDepth(A.left) - findDepth(A.right);
        if (Math.abs(difference) <= 1 && isBalanced(A.left) == 1 && isBalanced(A.right) == 1) {
            return 1;
        }
        return 0;
    }

    private int findDepth(TreeNode A) {
        if (A == null) {
            return 0;
        }
        return Math.max(findDepth(A.left), findDepth(A.right)) + 1;
    }
}
